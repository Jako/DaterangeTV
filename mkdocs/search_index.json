{
    "docs": [
        {
            "location": "/", 
            "text": "Image+\n\n\nDaterangeTV is a custom template variable for MODX Revolution. The template variable displays two depending datepicker inputs.\n\n\nRequirements\n\n\n\n\nMODX Revolution 2.2.4+\n\n\nPHP v5.3+\n\n\n\n\nFeatures\n\n\n\n\nTwo depending datepicker inputs allowing the backend user to insert a date range.\n\n\nSnippet/Output filter to display the daterange with formatting options in the frontend. \n\n\n\n\n\n\n\n\n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 17]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();", 
            "title": "Home"
        }, 
        {
            "location": "/#image", 
            "text": "DaterangeTV is a custom template variable for MODX Revolution. The template variable displays two depending datepicker inputs.  Requirements   MODX Revolution 2.2.4+  PHP v5.3+   Features   Two depending datepicker inputs allowing the backend user to insert a date range.  Snippet/Output filter to display the daterange with formatting options in the frontend.     \n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 17]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();", 
            "title": "Image+"
        }, 
        {
            "location": "/installation/", 
            "text": "Install from MODX Extras\n\n\nSearch for DaterangeTV in the Package Manager of a MODX installation and install it in there.\n\n\nManual installation\n\n\nIf you can't access the MODX Extras Repository in your MODX installation, you can manually install DaterangeTV.\n\n\n\n\nDownload the transport package from \nMODX Extras\n\n  (or one of the pre built transport packages in \n_packages\n)\n\n\nUpload the zip file to your MODX installation's \ncore/packages\n folder.\n\n\nIn the MODX Manager, navigate to the Package Manager page, and select 'Search locally for packages' from the dropdown \n  button.\n\n\nDaterangeTV should now show up in the list of available packages. Click the corresponding 'Install' button and follow \n  instructions to complete the installation.\n\n\n\n\nBuild it from source\n\n\nTo build and install the package from source you could use \nGit Package Management\n. \nThe GitHub repository of DaterangeTV contains a \nconfig.json\n \nto build that package locally. Use this option, if you want to debug DaterangeTV and/or contribute bugfixes and enhancements.\n\n\n\n\n\n\n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 17]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();", 
            "title": "Installation"
        }, 
        {
            "location": "/installation/#install-from-modx-extras", 
            "text": "Search for DaterangeTV in the Package Manager of a MODX installation and install it in there.", 
            "title": "Install from MODX Extras"
        }, 
        {
            "location": "/installation/#manual-installation", 
            "text": "If you can't access the MODX Extras Repository in your MODX installation, you can manually install DaterangeTV.   Download the transport package from  MODX Extras \n  (or one of the pre built transport packages in  _packages )  Upload the zip file to your MODX installation's  core/packages  folder.  In the MODX Manager, navigate to the Package Manager page, and select 'Search locally for packages' from the dropdown \n  button.  DaterangeTV should now show up in the list of available packages. Click the corresponding 'Install' button and follow \n  instructions to complete the installation.", 
            "title": "Manual installation"
        }, 
        {
            "location": "/installation/#build-it-from-source", 
            "text": "To build and install the package from source you could use  Git Package Management . \nThe GitHub repository of DaterangeTV contains a  config.json  \nto build that package locally. Use this option, if you want to debug DaterangeTV and/or contribute bugfixes and enhancements.   \n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 17]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();", 
            "title": "Build it from source"
        }, 
        {
            "location": "/usage/", 
            "text": "Input Options\n\n\nThe following input options could be set in template variable settings:\n\n\n\n\n\n\n\n\nSetting\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nAllow Blank\n\n\nIf set to No, MODX will not allow the user to save the Resource until a valid, non-blank value has been entered in the From Date input.\n\n\nYes\n\n\n\n\n\n\nDate Format\n\n\nThe format must be valid according to \nDate.parseDate\n.\n\n\nManager date format\n\n\n\n\n\n\n\n\nOutput Options\n\n\nThe following output options could be set in template variable settings if the\noutput type is set to \nDate Range (From \n To)\n. Another possibility is to\nassign the settings as properties to the MODX tag\n1\n.\n\n\n\n\n\n\n\n\nSetting\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nDate Format\n\n\nA between day, month and year by \n separated list of \nstrftime\n placeholders\n2\n.\n\n\n%e\n %B \n%Y\n\n\n\n\n\n\nSeparator\n\n\nString between the first and second part of the daterange.\n\n\n\u2013\n\n\n\n\n\n\nLocale\n\n\nLocale the daterange strings are formatted with.\n\n\nMODX \nlocale\n system setting\n\n\n\n\n\n\n\n\nSnippet/Output filter\n\n\nIf the output options for the custom tv could not be set (i.e. inside of MIGX) or if you want to use\nsnippet or an output filter could be used. The snippet has the following properties:\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ntvname\n\n\nName of the Daterange TV.\n\n\n-\n\n\n\n\n\n\ndocid\n\n\nResource where the Daterange TV value is received from.\n\n\nCurrent resource\n\n\n\n\n\n\nvalue\n\n\nUse your own value for the snippet output. The properties \ntvname\n and \ndocid\n are ignored.\n\n\n-\n\n\n\n\n\n\nformat\n\n\nA between day, month and year by \n separated list of \nstrftime\n placeholders\n2\n.\n\n\n%e.\n %B \n%Y\n\n\n\n\n\n\nseparator\n\n\nString between the first and second part of the daterange.\n\n\n\u2013\n\n\n\n\n\n\nlocale\n\n\nLocale the daterange strings are formatted with.\n\n\nMODX \nlocale\n system setting\n\n\n\n\n\n\nstripEqualParts\n\n\nStrip equal parts from the date range output (i.e. strip the year, if start and end of the date range have the same year).\n\n\nMODX \nlocale\n system setting\n\n\n\n\n\n\n\n\nSo the following snippet call could be used:\n\n\n[[daterange? \n\nvalue=`2013-01-01||2013-01-02` \n\nformat=` %d.| %b. |%Y` \n\nseparator=`\nthinsp;\u2013\nthinsp;` \n\nlocale=`de_DE.utf8`\n]]\n\n\n\n\nThe snippet could work as an output filter, but then the options have to be a json\nencoded array:\n\n\n[[*daterangetv:daterange=`{\nformat\n:\n%d|%m.|%Y\n,\nseparator\n:\n\u2013\n,\nlocale\n:\nde_DE.utf8\n}`]]\n\n\n\n\nColumn Renderer\n\n\nThe package contains a column renderer for i.e. MIGX or Collections. In Collections you have to \ninsert \nDaterangeTV.Renderer\n in the renderer option of the grid column.\n\n\n\n\n\n\n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 17]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe daterange template tariable could be formatted in template or template chunks with the following tag syntax: \n[[*tvname?format=`%e| %B |%Y`\nlocale=`de_DE.utf8`]]\n\n\n\n\n\n\nIf the output type is set to \nDate Range (From \n To)\n the output will be formatted removing equal days and months (and years - by showing only the start date).", 
            "title": "Usage"
        }, 
        {
            "location": "/usage/#input-options", 
            "text": "The following input options could be set in template variable settings:     Setting  Description  Default      Allow Blank  If set to No, MODX will not allow the user to save the Resource until a valid, non-blank value has been entered in the From Date input.  Yes    Date Format  The format must be valid according to  Date.parseDate .  Manager date format", 
            "title": "Input Options"
        }, 
        {
            "location": "/usage/#output-options", 
            "text": "The following output options could be set in template variable settings if the\noutput type is set to  Date Range (From   To) . Another possibility is to\nassign the settings as properties to the MODX tag 1 .     Setting  Description  Default      Date Format  A between day, month and year by   separated list of  strftime  placeholders 2 .  %e  %B  %Y    Separator  String between the first and second part of the daterange.  \u2013    Locale  Locale the daterange strings are formatted with.  MODX  locale  system setting", 
            "title": "Output Options"
        }, 
        {
            "location": "/usage/#snippetoutput-filter", 
            "text": "If the output options for the custom tv could not be set (i.e. inside of MIGX) or if you want to use\nsnippet or an output filter could be used. The snippet has the following properties:     Property  Description  Default      tvname  Name of the Daterange TV.  -    docid  Resource where the Daterange TV value is received from.  Current resource    value  Use your own value for the snippet output. The properties  tvname  and  docid  are ignored.  -    format  A between day, month and year by   separated list of  strftime  placeholders 2 .  %e.  %B  %Y    separator  String between the first and second part of the daterange.  \u2013    locale  Locale the daterange strings are formatted with.  MODX  locale  system setting    stripEqualParts  Strip equal parts from the date range output (i.e. strip the year, if start and end of the date range have the same year).  MODX  locale  system setting     So the following snippet call could be used:  [[daterange?  value=`2013-01-01||2013-01-02`  format=` %d.| %b. |%Y`  separator=` thinsp;\u2013 thinsp;`  locale=`de_DE.utf8`\n]]  The snippet could work as an output filter, but then the options have to be a json\nencoded array:  [[*daterangetv:daterange=`{ format : %d|%m.|%Y , separator : \u2013 , locale : de_DE.utf8 }`]]", 
            "title": "Snippet/Output filter"
        }, 
        {
            "location": "/usage/#column-renderer", 
            "text": "The package contains a column renderer for i.e. MIGX or Collections. In Collections you have to \ninsert  DaterangeTV.Renderer  in the renderer option of the grid column.   \n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 17]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();        The daterange template tariable could be formatted in template or template chunks with the following tag syntax:  [[*tvname?format=`%e| %B |%Y` locale=`de_DE.utf8`]]    If the output type is set to  Date Range (From   To)  the output will be formatted removing equal days and months (and years - by showing only the start date).", 
            "title": "Column Renderer"
        }
    ]
}